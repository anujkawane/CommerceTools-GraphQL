/**
 *
 *    Generated file, please do not change!!!
 *    From http://www.vrap.io/ with love
 *
 *                ,d88b.d88b,
 *                88888888888
 *                `Y8888888Y'
 *                  `Y888Y'
 *                    `Y'
 *
 */
import { ByProjectKeyCustomObjectsByContainerByKeyRequestBuilder } from './by-project-key-custom-objects-by-container-by-key-request-builder';
import { ByProjectKeyCustomObjectsByIDRequestBuilder } from './by-project-key-custom-objects-by-id-request-builder';
import { CustomObject, CustomObjectDraft, CustomObjectPagedQueryResponse } from '../../models/custom-object';
import { executeRequest, QueryParam } from '../../shared/utils/common-types';
import { ApiRequest } from '../../shared/utils/requests-utils';
export declare class ByProjectKeyCustomObjectsRequestBuilder {
    protected readonly args: {
        pathArgs: {
            projectKey: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    };
    constructor(args: {
        pathArgs: {
            projectKey: string;
        };
        executeRequest: executeRequest;
        baseUri?: string;
    });
    withContainerAndKey(childPathArgs: {
        container: string;
        key: string;
    }): ByProjectKeyCustomObjectsByContainerByKeyRequestBuilder;
    withId(childPathArgs: {
        ID: string;
    }): ByProjectKeyCustomObjectsByIDRequestBuilder;
    /**
     *	The query endpoint allows to retrieve custom objects in a specific container or all custom objects.
     *	For performance reasons, it is highly advisable to query only for custom objects in a container by using
     *	the container field in the where predicate.
     *
     */
    get(methodArgs?: {
        queryArgs?: {
            expand?: string | string[];
            sort?: string | string[];
            limit?: number | number[];
            offset?: number | number[];
            withTotal?: boolean | boolean[];
            where?: string | string[];
            [key: string]: QueryParam;
        };
        headers?: {
            [key: string]: string;
        };
    }): ApiRequest<CustomObjectPagedQueryResponse>;
    /**
     *	Creates a new custom object or updates an existing custom object.
     *	If an object with the given container/key exists,
     *	the object will be replaced with the new value and the version is incremented.
     *	If the request contains a version and an object with the given container/key exists then the version
     *	must match the version of the existing object. Concurrent updates for the same custom object still can result
     *	in a Conflict (409) even if the version is not provided.
     *	Fields with null values will not be saved.
     *
     */
    post(methodArgs: {
        queryArgs?: {
            expand?: string | string[];
            [key: string]: QueryParam;
        };
        body: CustomObjectDraft;
        headers?: {
            [key: string]: string;
        };
    }): ApiRequest<CustomObject>;
}
